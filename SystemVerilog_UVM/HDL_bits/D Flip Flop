// d flip flop with synchronous set and reset

module dff(q,qbar,d,set,reset,clk);
  input d,set,reset,clk;
  output reg q;
  output qbar; // since here we are generating qbar from q so need not declare qbar as reg
  
  assign qbar = ~q;
  
  always @(posedge clk) // as this is a synchronous block we are executing this block only at the posedge of the clock
    begin // set & reset are active low here
      if(reset == 0) 
        q<=0;
      else if(set == 0)
        q<=1;
      else
        q<=d;
    end
  
endmodule

// d flip flop with "asynchronous" set and reset

module dff(q,qbar,d,set,reset,clk);
  input d,set,reset,clk;
  output reg q;
  output qbar; // since here we are generating qbar from q so need not declare qbar as reg
  
  assign qbar = ~q;
  
  always @(posedge clk or negedge set or negedge reset) // as this is a asynchronous block we are executing this block at either clk or reset or set
    begin // set & reset are active low here
      if(reset == 0) 
        q<=0;
      else if(set == 0)
        q<=1;
      else
        q<=d;
    end
  
endmodule
